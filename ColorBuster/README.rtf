{\rtf1\ansi\ansicpg1252\cocoartf1404\cocoasubrtf340
{\fonttbl\f0\froman\fcharset0 Times-Roman;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww12240\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs28 \cf0 Lillian Arguelles\
CSIS 3460\
04/24/2016\
\
\

\b * Resources
\b0 \
	Added Images:	Black.jpg\

\b \
* Default Classes\

\b0 \

\b ** Main.java
\b0 \
	No Changes Made\
\

\b * Model Classes
\b0 \

\b \
** Tile.java
\b0 \
	No Changes Made\
\

\b ** Board.java
\b0 \
	Added private int threshold\
	Board Constructor\
		added threshold in parameter\
		set global class variable threshold to value passed in with parameter\
	isMoveAvailable\
		changes the if condition (matches.size() >= 3) to be >= threshold\
\

\b * View Classes\
** ButtonView.java
\b0 \
	Added a JButton - hintButton\
	Added ActionListener levelListener, ActionListener hintButtonListener into the parameters of the 		ButtonView Constructor\
	added for level combo box to work: levelSelector.addActionListener(levelListener);\
	added hint button implementation:\
\pard\pardeftab720\partightenfactor0
\cf0 		hintButton = new JButton();\
		hintButton.setText("Hint");\
		hintButton.addActionListener(hintButtonListener);\
		add(hintButton);\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 \

\b ** ScoreView.java
\b0 \
	Added:\
		private static int threshold\
		private static int bonus\
		private static int pointsReg\
		private static int pointsBonus\
		private int saveScore\
	Constructor - left alone\
	commented out updateScore - original function\
	created functions:\
		setupScoreView\
			passes in threshold, bonus, pointsReg and pointsBonus as parameters\
			sets global variables to associated parameters (i.e. threshold to threshold, etc)\
		updateScore - new version\
			parameter of int tiles is passed in\
			local variable s is set to calculate score\
			new score is added to original score and set to label\
		calculateScore\
			parameter of int tiles is passed in\
			calculates scores based on\
				if number of tiles exceeds # of tiles needed for bonus (bonus)\
				if yes additional tiles have additional points\
				gets regular point score and adds regular with bonus\
				returns the new additional score\
		clear score\
			because of new score calculation method needs this to clear score when new game\
		setter functions (used when changing level)\
			setThreshold\
			setNumBonus\
			setPtsBonus\
			setPtsRegular\
\

\b ** GameView.java
\b0 \
	Global Class Variables\
		added:	private int threshold\
				ActionListener levelListener\
				ActionListener hintListener\
	Constructor:\
		Added to parameters:\
			threshold, levelListener and hintListener\
		Added:\
			updateScoreLevel(threshold) - calls function\
			Added levelListener and hintListener to ButtonView Parameters\
			Added threshold to BoardView parameters\
\

\b ** BoardView.java
\b0 \
	added:\
		private int threshold;\
		private Image originalImg;\
		private Image hintImg;\
		private String hintString = "Resources/images/Black.jpg";\
		Timer timer;\
		private int tr;\
		private int tc;\
	Constructor\
		Added int threshold to parameter\
	processTouchedTile\
		created HashSet matches\
		created call for locateNeighbors\
		created call for removeMatchingTiles\
		created call for collapsecollumns\
		adjusted return statement to return # of matching tiles\
	setThreshold\
		created for adjusting level when needed\
	processHint\
		created for implementation of hint button\
	createHintImage\
		created for implementation of hint button\
	blink\
		created for implementation of hint button\
\

\b **TileView.java		
\b0 \
	blinkImg\
		created for implementation of hint button\
	getImg\
		created for implementation of hint button\
\

\b Controller
\b0 \

\b \
** GameController.java
\b0 \
	Added:\
		private int variable threshold\
		private final int variable DEFAULT - set to 3\
	in GameController constructor\
		set threshold to be equal to default\
		in the GameView call for new game view\
			changed \'93Title\'94 to \'93Color Buster\'94\
			added: new LevelListener()\
			added: threshold\
			added: new HintListener()\
	in TileTouchedListener Class\
		added: gameView.processTouchedTile(tv);\
		commented out: System.out.println(\'93Not implemented yet\'94);\
	in NewGameListener Class\
		commented out: System.out.println(\'93Not implemented yet\'94);\
		added: gameView.newGame(threshold);\
	Added:\
		LevelListener Class\
			Changes the level based on the user adjusting the number in combo box\
			Updates level in game view\
		HintListener Class\
			Implements Hint Button\
			Calls Game View to process hint\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\i\b \cf0 	**Note:
\i0\b0 \
		Other things to change in score if time:\
			Using hint = negative points\
				1 Hint = Free\
				2+ Hint = -5 Points per Hint\
				5+ Hint = -10 Points per Hint\
			Add High Score\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\b \cf0 ** levelManager.java
\b0 \
	Note: its really a \'91manager\'92 but used for more of a keeping track of level differences\
	created by me for level changes\
	global class variables\
		private static int threshold;\
\pard\pardeftab720\partightenfactor0
\cf0 		private static int bonus;\
		private static int pointsReg;\
		private static int pointsBonus;\
		private static int level;\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 	constructor\
		takes in threshold to set level by\
		Note: there is also a commented out function call to set by level.\
			a better and clearer implementation of levelManager would be\
				to have it set by Level rather than threshold\
	getter functions for global class variables\
		used for when changing level and needing to get number by outside classes\
	setByLevel\
		Note: not currently being used; will be used if it is set by level rather than threshold\
	setByThreshold\
		sets variables based on threshold\
		chart below explains breakdown (also found in top of Java File)\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\i\b \cf0 	**Note:
\i0\b0 \
		Other things to change by level if time:\
			rows, columns, number of colors used per level\
}